% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/metadata_extraction.R
\name{extract_cid}
\alias{extract_cid}
\title{Extract PubChem CIDs via InChIKey, CAS, or Name (wrapper of webchem::get_cid)}
\usage{
extract_cid(
  data,
  name_col = "Name",
  cas_col = "CAS",
  inchikey_col = "InChIKey",
  verbose = TRUE
)
}
\arguments{
\item{data}{A data.frame containing chemical information.}

\item{name_col}{Name or index of the column containing substance names (optional).
Can be a character string (column name) or integer (column index). Default is "Name".}

\item{cas_col}{Name or index of the column containing CAS numbers (optional).
Can be a character string (column name) or integer (column index). Default is "CAS".}

\item{inchikey_col}{Name or index of the column containing InChIKeys (optional).
Can be a character string (column name) or integer (column index). Default is "InChIKey".}

\item{verbose}{Logical. Whether to print progress messages. Default is \code{TRUE}.}
}
\value{
A data.frame with a new or updated \code{CID} column containing matched PubChem CIDs.
Existing CID values are preserved and only missing values are filled.
}
\description{
A convenience wrapper around \code{\link[webchem]{get_cid}} that looks up PubChem Compound IDs (CIDs)
using InChIKey, CAS number(s), or chemical names - in that order of priority. It supports flexible column
specifications (either by name or index), parses CAS strings containing multiple entries, and gives informative
messages if specified columns are missing.
}
\details{
The function searches for CIDs in the following priority order:
\enumerate{
\item InChIKey (most reliable)
\item CAS numbers (parsed using \code{\link{parse_cas_clean}})
\item Chemical names (least reliable due to naming variations)
}

The function handles network errors gracefully and provides detailed progress information.
Multiple CAS numbers in a single cell are supported and parsed automatically.
}
\examples{
\dontrun{
# Basic usage with name and CAS columns
df <- data.frame(
  Name = c("benzene", "acetic acid"),
  CAS = c("71-43-2", "64-19-7")
)
result <- extract_cid(df)

# Using column indices instead of names
extract_cid(df, name_col = 1, cas_col = 2)

# With InChIKey column
df_with_inchi <- data.frame(
  Name = "benzene",
  InChIKey = "UHOVQNZJYSORNB-UHFFFAOYSA-N"
)
extract_cid(df_with_inchi)
}

}
\seealso{
\code{\link{parse_cas_clean}} for CAS number parsing,
\code{\link[webchem]{get_cid}} for the underlying PubChem query function
}
