% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/metadata_extraction.R
\name{parse_cas_clean}
\alias{parse_cas_clean}
\title{Parse and clean CAS number strings}
\usage{
parse_cas_clean(cas_string)
}
\arguments{
\item{cas_string}{A character string containing one or more CAS numbers.
Can be NA or empty string.}
}
\value{
A character vector of cleaned and validated CAS numbers in the format
"xxx-xx-x" where x represents digits. If no valid CAS is found, returns
\code{NA_character_} and emits a warning message.
}
\description{
This function processes strings that may contain multiple CAS numbers
separated by arbitrary characters and returns a cleaned character vector
of valid CAS numbers in the format "xxx-xx-x". Leading zeros are removed.
}
\details{
The function handles various input formats including:
\itemize{
\item Multiple CAS numbers separated by semicolons, commas, or other delimiters
\item CAS numbers with leading zeros
\item CAS numbers enclosed in brackets or other characters
}

The function uses regular expressions to:
\itemize{
\item Remove all non-digit and non-hyphen characters
\item Split the string into potential CAS number components
\item Remove leading zeros from the first block of digits
\item Validate against the standard CAS format (2-7 digits, 2 digits, 1 digit)
}
}
\examples{
# Multiple CAS numbers with various separators
parse_cas_clean("00064-17-5; [50-00-0]\n00110-54-3")
# Returns: c("64-17-5", "50-00-0", "110-54-3")

# Invalid input
parse_cas_clean("abc;1234") # Returns NA with a message

# Empty or NA input
parse_cas_clean(NA) # Returns NA
parse_cas_clean("") # Returns NA

}
\seealso{
\code{\link{extract_cid}} for extracting PubChem CIDs using CAS numbers
}
